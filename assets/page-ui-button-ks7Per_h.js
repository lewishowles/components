import x from"./playground-ui-button-CMB-i5JB.js";import k from"./playground-ui-button-icon-DX75DL9T.js";import T from"./playground-ui-button-reactive-nKZ8XxnT.js";import{k as z,w as o,e as i,o as B,d as l,b as e,i as n,n as p,g as r}from"./index-DiTr-url.js";import"./use-template-generator-CKbzPZrY.js";const $={__name:"page-ui-button",setup(N){return(j,t)=>{const d=i("router-link"),s=i("component-prop"),a=i("component-props"),u=i("component-slot"),m=i("component-slots"),f=i("component-event"),b=i("component-events"),y=i("component-method"),v=i("component-methods"),g=i("component-playgrounds"),w=i("component-page");return B(),z(w,null,{title:o(()=>t[0]||(t[0]=[n(" UI button ",-1)])),introduction:o(()=>t[1]||(t[1]=[e("p",null,[e("code",null,"ui-button"),n(" is an extension of the standard "),e("code",null,"button"),n(" element.")],-1)])),default:o(()=>[l(a,null,{default:o(()=>[l(s,{id:"prop-icon-start"},{name:o(()=>t[2]||(t[2]=[n(" iconStart ",-1)])),type:o(()=>t[3]||(t[3]=[n(" String ",-1)])),"default-value":o(()=>t[4]||(t[4]=[n(" null ",-1)])),default:o(()=>[t[10]||(t[10]=e("p",null,"An icon to display at the start of a button.",-1)),e("p",null,[t[6]||(t[6]=n(" The icon is implemented using ",-1)),t[7]||(t[7]=e("code",null,'<component :is="...">',-1)),t[8]||(t[8]=n(", allowing the button to use icons it doesn't explicitly import. To be used in this way, the icon must be globally registered. You can find ",-1)),l(d,p(r({to:"icons"})),{default:o(()=>t[5]||(t[5]=[n(" the list of available icons in this project ",-1)])),_:1,__:[5]},16),t[9]||(t[9]=n(", or you can use one that is globally registered in your project. ",-1))]),t[11]||(t[11]=e("p",null,[e("em",null,[n("Note that "),e("code",null,"start"),n(" and "),e("code",null,"end"),n(" depend on the current document direction.")])],-1))]),_:1,__:[10,11]}),l(s,{id:"prop-icon-end"},{name:o(()=>t[12]||(t[12]=[n(" iconEnd ",-1)])),type:o(()=>t[13]||(t[13]=[n(" String ",-1)])),"default-value":o(()=>t[14]||(t[14]=[n(" null ",-1)])),default:o(()=>[t[20]||(t[20]=e("p",null,"An icon to display at the start of a button.",-1)),e("p",null,[t[16]||(t[16]=n(" The icon is implemented using ",-1)),t[17]||(t[17]=e("code",null,'<component :is="...">',-1)),t[18]||(t[18]=n(", allowing the button to use icons it doesn't explicitly import. To be used in this way, the icon must be globally registered. You can find ",-1)),l(d,p(r({to:"icons"})),{default:o(()=>t[15]||(t[15]=[n(" the list of available icons in this project ",-1)])),_:1,__:[15]},16),t[19]||(t[19]=n(", or you can use one that is globally registered in your project. ",-1))]),t[21]||(t[21]=e("p",null,[e("em",null,[n("Note that "),e("code",null,"start"),n(" and "),e("code",null,"end"),n(" depend on the current document direction.")])],-1))]),_:1,__:[20,21]}),l(s,{id:"prop-icon-only"},{name:o(()=>t[22]||(t[22]=[n(" iconOnly ",-1)])),type:o(()=>t[23]||(t[23]=[n(" Boolean ",-1)])),"default-value":o(()=>t[24]||(t[24]=[n(" false ",-1)])),default:o(()=>[t[25]||(t[25]=e("p",null,[n("Whether to only show an icon (and not the associated text). If true, the text is hidden via an "),e("code",null,"sr-only"),n(" class, so is still accessible to screen readers and therefore important. The displayed icon is also shown at "),e("code",null,"1em"),n(" size when alone, to better fill the button.")],-1))]),_:1,__:[25]}),l(s,{id:"prop-reactive"},{name:o(()=>t[26]||(t[26]=[n(" reactive ",-1)])),type:o(()=>t[27]||(t[27]=[n(" Boolean ",-1)])),"default-value":o(()=>t[28]||(t[28]=[n(" false ",-1)])),default:o(()=>[t[29]||(t[29]=e("p",null,[n("When a button is "),e("code",null,"reactive"),n(", it will show a loading indicator when activated. This can be deactivated via the exposed "),e("code",null,"reset"),n(" method.")],-1))]),_:1,__:[29]}),l(s,{id:"prop-icon-classes"},{name:o(()=>t[30]||(t[30]=[n(" iconClasses ",-1)])),type:o(()=>t[31]||(t[31]=[n(" String ",-1)])),"default-value":o(()=>t[32]||(t[32]=[n(" null ",-1)])),default:o(()=>[t[33]||(t[33]=e("p",null,[n("Any classes to add to the icon itself. If a size class is added ("),e("code",null,"size-"),n("), the default size class will not be included.")],-1))]),_:1,__:[33]})]),_:1}),l(m,null,{default:o(()=>[l(u,{id:"slot-default"},{name:o(()=>t[34]||(t[34]=[n(" default ",-1)])),default:o(()=>[t[35]||(t[35]=e("p",null,"The default slot contains the content to display in the button.",-1))]),_:1,__:[35]}),l(u,{id:"slot-loading-label"},{name:o(()=>t[36]||(t[36]=[n(" loading-label ",-1)])),"default-value":o(()=>t[37]||(t[37]=[n(" Loading ",-1)])),default:o(()=>[t[38]||(t[38]=e("p",null,[n("The text to show to screen-reader users when this button is in its "),e("code",null,"reactive"),n(" state.")],-1))]),_:1,__:[38]})]),_:1}),l(b,null,{default:o(()=>[l(f,{id:"event-click"},{name:o(()=>t[39]||(t[39]=[n(" click ",-1)])),default:o(()=>[t[40]||(t[40]=e("p",null,"Emitted when the button is clicked or activated via keyboard.",-1))]),_:1,__:[40]})]),_:1}),l(v,null,{default:o(()=>[l(y,{id:"method-reset"},{name:o(()=>t[41]||(t[41]=[e("code",null,"reset",-1)])),default:o(()=>[t[42]||(t[42]=e("p",null,"Reset the reactive state of a reactive button.",-1))]),_:1,__:[42]})]),_:1}),l(g,null,{default:o(()=>[l(x),l(k),l(T)]),_:1})]),_:1})}}};export{$ as default};
