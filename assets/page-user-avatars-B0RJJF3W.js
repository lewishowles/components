import d from"./playground-user-avatars-DQfV7THs.js";import m from"./playground-user-avatars-no-images-G05laIRw.js";import f from"./playground-user-avatars-limit-Bm7O93sB.js";import{k as v,w as t,e as s,o as y,d as n,b as i,i as o}from"./index-DiTr-url.js";import"./use-template-generator-CKbzPZrY.js";const z={__name:"page-user-avatars",setup(b){return(g,l)=>{const a=s("code-block"),e=s("component-prop"),r=s("component-props"),p=s("component-playgrounds"),u=s("component-page");return y(),v(u,null,{title:t(()=>l[0]||(l[0]=[o(" User avatars ",-1)])),introduction:t(()=>l[1]||(l[1]=[i("p",null,[i("code",null,"user-avatars"),o(" displays a list of provided avatars, with additional information such as their name or initials as provided.")],-1)])),default:t(()=>[n(r,null,{default:t(()=>[n(e,{id:"prop-users"},{name:t(()=>l[2]||(l[2]=[o(" users ",-1)])),type:t(()=>l[3]||(l[3]=[o(" Array ",-1)])),"default-value":t(()=>l[4]||(l[4]=[o(" [] ",-1)])),default:t(()=>[l[6]||(l[6]=i("p",null,"The list of users to display. By default, the format of provided users should be as follows:",-1)),n(a,null,{default:t(()=>l[5]||(l[5]=[o('[{ name: "Sophie Wardhaugh", initials: "SW", avatar: "/absolute/path/to/avatar" }]',-1)])),_:1,__:[5]}),l[7]||(l[7]=i("p",null,"Any of the information can be omitted, and the component will do its best to compensate.",-1)),l[8]||(l[8]=i("ul",null,[i("li",null,"If no name is provided, the tooltip will show the initials."),i("li",null,"If no initials are provided, they will be generated from the name."),i("li",null,"If no avatar is provided, the initials will be shown."),i("li",null,"Without a name or initials, no tooltip is included."),i("li",null,"If an avatar is provided, but fails to load, the user will fall back to the initials if possible.")],-1))]),_:1,__:[6,7,8]}),n(e,{id:"prop-limit"},{name:t(()=>l[9]||(l[9]=[o(" limit ",-1)])),type:t(()=>l[10]||(l[10]=[o(" Number ",-1)])),"default-value":t(()=>l[11]||(l[11]=[o(" null ",-1)])),default:t(()=>[l[12]||(l[12]=i("p",null,'The maximum number of avatars to display. Any additional will contribute to a "+X" last item.',-1))]),_:1,__:[12]}),n(e,{id:"prop-shape"},{name:t(()=>l[13]||(l[13]=[o(" shape ",-1)])),type:t(()=>l[14]||(l[14]=[o(" String ",-1)])),"default-value":t(()=>l[15]||(l[15]=[o(" round ",-1)])),default:t(()=>[l[16]||(l[16]=i("p",null,'The shape of avatars to display. Available values include "round", "square", and "squircle" (or "roundangle"). Anything else will default to "round".',-1))]),_:1,__:[16]}),n(e,{id:"prop-size"},{name:t(()=>l[17]||(l[17]=[o(" size ",-1)])),type:t(()=>l[18]||(l[18]=[o(" String ",-1)])),"default-value":t(()=>l[19]||(l[19]=[o(" size-10 ",-1)])),default:t(()=>[l[20]||(l[20]=i("p",null,"The size of the avatars to display, based on Tailwind size classes.",-1))]),_:1,__:[20]}),n(e,{id:"prop-overlap"},{name:t(()=>l[21]||(l[21]=[o(" overlap ",-1)])),type:t(()=>l[22]||(l[22]=[o(" Boolean ",-1)])),"default-value":t(()=>l[23]||(l[23]=[o(" null ",-1)])),default:t(()=>[l[24]||(l[24]=i("p",null,"Whether avatars should overlap. If they do, they're given an outline so that the images don't clash.",-1)),l[25]||(l[25]=i("p",null,'Overlap is true by default for "circle" avatars, and false by default for "square" and "squircle", but a value provided here will take precedence.',-1))]),_:1,__:[24,25]}),n(e,{id:"prop-initials-colour-classes"},{name:t(()=>l[26]||(l[26]=[o(" initialsColourClasses ",-1)])),type:t(()=>l[27]||(l[27]=[o(" String ",-1)])),"default-value":t(()=>l[28]||(l[28]=[o(" bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200 ",-1)])),default:t(()=>[l[29]||(l[29]=i("p",null,"The colour classes to apply when displaying initials.",-1))]),_:1,__:[29]}),n(e,{id:"prop-initials-outline-classes"},{name:t(()=>l[30]||(l[30]=[o(" initialsOutlineClasses ",-1)])),type:t(()=>l[31]||(l[31]=[o(" String ",-1)])),"default-value":t(()=>l[32]||(l[32]=[o(" outline-white dark:outline-purple-200 ",-1)])),default:t(()=>[l[33]||(l[33]=i("p",null,"The colour classes to apply when displaying initials.",-1))]),_:1,__:[33]})]),_:1}),n(p,null,{default:t(()=>[n(d),n(m),n(f)]),_:1})]),_:1})}}};export{z as default};
