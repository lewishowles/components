import d from"./playground-conditional-wrapper-BgMiaQp0.js";import{k as f,w as o,e as l,o as w,d as p,b as n,i as e}from"./index-DiTr-url.js";import"./use-template-generator-CKbzPZrY.js";const x={__name:"page-conditional-wrapper",setup(_){return(g,t)=>{const r=l("component-prop"),a=l("component-props"),s=l("component-slot"),u=l("component-slots"),m=l("component-playgrounds"),i=l("component-page");return w(),f(i,null,{title:o(()=>t[0]||(t[0]=[e(" Conditional wrapper ",-1)])),introduction:o(()=>t[1]||(t[1]=[n("p",null,[n("code",null,"conditional-wrapper"),e(" is a helper component that makes it easy to optionally wrap one or more elements in a tag. This might be useful, for example, to group items together when there are more than one, but keep a template simple otherwise.")],-1)])),default:o(()=>[p(a,null,{default:o(()=>[p(r,{id:"prop-wrap"},{name:o(()=>t[2]||(t[2]=[e(" wrap ",-1)])),type:o(()=>t[3]||(t[3]=[e(" boolean ",-1)])),"default-value":o(()=>t[4]||(t[4]=[e(" true ",-1)])),default:o(()=>[t[5]||(t[5]=n("p",null,[e("Whether to apply the wrapper. If "),n("code",null,"false"),e(", the contents are unwrapped and display as if "),n("code",null,"conditional-wrapper"),e(" was not used.")],-1)),t[6]||(t[6]=n("p",null,[n("em",null,[e("Note that this component does not inherit attributes when "),n("code",null,"wrap"),e(" is set to false, as there may be multiple root nodes.")])],-1))]),_:1,__:[5,6]}),p(r,{id:"prop-tag"},{name:o(()=>t[7]||(t[7]=[e(" tag ",-1)])),type:o(()=>t[8]||(t[8]=[e(" string ",-1)])),"default-value":o(()=>t[9]||(t[9]=[e(" div ",-1)])),default:o(()=>[t[10]||(t[10]=n("p",null,"The tag to use when wrapping content.",-1))]),_:1,__:[10]})]),_:1}),p(u,null,{default:o(()=>[p(s,{id:"slot-default"},{name:o(()=>t[11]||(t[11]=[e(" default ",-1)])),default:o(()=>[t[12]||(t[12]=n("p",null,"The default slot contains the content to be wrapped.",-1))]),_:1,__:[12]})]),_:1}),p(m,null,{default:o(()=>[p(d)]),_:1})]),_:1})}}};export{x as default};
